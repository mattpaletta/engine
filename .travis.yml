languages: cpp

os: linux
dist: bionic
cache: ccache

matrix:
  include:
# These tests run every time
    - os: windows
      compiler: msvc
      allow_failures: true
      env:
      - BUILD=Debug
      - env_cmake_cxx_compiler=msvc
      - env_cmake_c_compiler=msvc
      - enable_audio=ON
      - enable_vr=ON
      - enable_text=ON
      - enable_animation=ON
      - enable_json=ON
      - enable_min_game_object=ON
      - enable_multithreaded=ON
      - enable_debug=ON
      - enable_debug_vr=ON
    - os: linux
      compiler: gcc
      env:
      - BUILD=Debug
      - env_cmake_cxx_compiler=g++
      - env_cmake_c_compiler=gcc
      - enable_audio=ON
      - enable_vr=ON
      - enable_text=ON
      - enable_animation=ON
      - enable_json=ON
      - enable_min_game_object=ON
      - enable_multithreaded=ON
      - enable_debug=ON
      - enable_debug_vr=ON
      addons:
        apt:
          update: true
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc
          - freeglut3
          - freeglut3-dev
          - mesa-utils
          - libglfw3
          - libglfw3-dev
    - os: linux
      compiler: clang++-10
      env:
      - BUILD=Debug
      - env_cmake_cxx_compiler=clang++-10
      - env_cmake_c_compiler=clang-10
      - enable_audio=ON
      - enable_vr=ON
      - enable_text=ON
      - enable_animation=ON
      - enable_json=ON
      - enable_min_game_object=ON
      - enable_multithreaded=ON
      - enable_debug=ON
      - enable_debug_vr=ON
      addons:
        apt:
          update: true
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - freeglut3
          - freeglut3-dev
          - mesa-utils
          - libglfw3
          - libglfw3-dev
# Test on OSX
    - os: osx
      osx_image: xcode11.4
      compiler: clang
      env:
      - BUILD=Debug
      - env_cmake_cxx_compiler=clang++
      - env_cmake_c_compiler=clang
      - enable_audio=ON
      - enable_vr=OFF
      - enable_text=ON
      - enable_animation=ON
      - enable_json=ON
      - enable_min_game_object=ON
      - enable_multithreaded=ON
      - enable_debug=ON
      - enable_debug_vr=ON
      addons:
        homebrew:
          packages:
            - glfw3
            - cmake
          update: true
# Test on Linux
    - os: linux
      if: branch = master
      compiler: gcc-8
      env:
      - BUILD=Debug
      - env_cmake_cxx_compiler=g++-8
      - env_cmake_c_compiler=gcc-8
      - enable_audio=ON
      - enable_vr=ON
      - enable_text=ON
      - enable_animation=ON
      - enable_json=ON
      - enable_min_game_object=ON
      - enable_multithreaded=ON
      - enable_debug=ON
      - enable_debug_vr=ON
      addons:
        apt:
          update: true
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-8
          - freeglut3
          - freeglut3-dev
          - mesa-utils
          - libglfw3
          - libglfw3-dev
    - os: linux
      if: branch = master
      compiler: gcc-9
      env:
      - BUILD=Debug
      - env_cmake_cxx_compiler=g++-9
      - env_cmake_c_compiler=gcc-9
      - enable_audio=ON
      - enable_vr=ON
      - enable_text=ON
      - enable_animation=ON
      - enable_json=ON
      - enable_min_game_object=ON
      - enable_multithreaded=ON
      - enable_debug=ON
      - enable_debug_vr=ON
      addons:
        apt:
          update: true
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-9
          - freeglut3
          - freeglut3-dev
          - mesa-utils
          - libglfw3
          - libglfw3-dev

# Test configurations
    - os: linux
      if: branch = master
      compiler: gcc
      env: # test everything off
      - BUILD=Debug
      - env_cmake_cxx_compiler=g++
      - env_cmake_c_compiler=gcc
      - enable_audio=OFF
      - enable_vr=OFF
      - enable_text=OFF
      - enable_animation=OFF
      - enable_json=OFF
      - enable_min_game_object=OFF
      - enable_multithreaded=OFF
      - enable_debug=OFF
      - enable_debug_vr=OFF
      addons:
        apt:
          update: true
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc
          - freeglut3
          - freeglut3-dev
          - mesa-utils
          - libglfw3
          - libglfw3-dev
    - os: linux
      if: branch = master
      compiler: gcc
      env: # test only audio
      - BUILD=Debug
      - env_cmake_cxx_compiler=g++
      - env_cmake_c_compiler=gcc
      - enable_audio=ON
      - enable_vr=OFF
      - enable_text=OFF
      - enable_animation=OFF
      - enable_json=OFF
      - enable_min_game_object=OFF
      - enable_multithreaded=OFF
      - enable_debug=OFF
      - enable_debug_vr=OFF
      addons:
        apt:
          update: true
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc
          - freeglut3
          - freeglut3-dev
          - mesa-utils
          - libglfw3
          - libglfw3-dev
    - os: linux
      if: branch = master
      compiler: gcc
      env: # test only vr
      - BUILD=Debug
      - env_cmake_cxx_compiler=g++
      - env_cmake_c_compiler=gcc
      - enable_audio=OFF
      - enable_vr=ON
      - enable_text=OFF
      - enable_animation=OFF
      - enable_json=OFF
      - enable_min_game_object=OFF
      - enable_multithreaded=OFF
      - enable_debug=OFF
      - enable_debug_vr=OFF
      addons:
        apt:
          update: true
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc
          - freeglut3
          - freeglut3-dev
          - mesa-utils
          - libglfw3
          - libglfw3-dev
    - os: linux
      if: branch = master
      compiler: gcc
      env: # test only text
      - BUILD=Debug
      - env_cmake_cxx_compiler=g++
      - env_cmake_c_compiler=gcc
      - enable_audio=OFF
      - enable_vr=OFF
      - enable_text=ON
      - enable_animation=OFF
      - enable_json=OFF
      - enable_min_game_object=OFF
      - enable_multithreaded=OFF
      - enable_debug=OFF
      - enable_debug_vr=OFF
      addons:
        apt:
          update: true
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc
          - freeglut3
          - freeglut3-dev
          - mesa-utils
          - libglfw3
          - libglfw3-dev
    - os: linux
      if: branch = master
      compiler: gcc
      env: # test only animation
      - BUILD=Debug
      - env_cmake_cxx_compiler=g++
      - env_cmake_c_compiler=gcc
      - enable_audio=OFF
      - enable_vr=OFF
      - enable_text=OFF
      - enable_animation=ON
      - enable_json=OFF
      - enable_min_game_object=OFF
      - enable_multithreaded=OFF
      - enable_debug=OFF
      - enable_debug_vr=OFF
      addons:
        apt:
          update: true
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc
          - freeglut3
          - freeglut3-dev
          - mesa-utils
          - libglfw3
          - libglfw3-dev

env:
  # Build with standard settings, in relaase
  - BUILD=Release

addons:
  apt:
    update: true
    source:
      - sourceline: 'ppa:mhier/libboost-latest'
      - ubuntu-toolchain-r-test
    packages:
      - freeglut3
      - freeglut3-dev
      - mesa-utils
      - libglfw3
      - libglfw3-dev


before_install:
  - if [[ $TRAVIS_OS_NAME == "linux" && ($CXX_FOR_BUILD == "clang++-10" || $CXX_FOR_BUILD == "clang++-9" || $CXX_FOR_BUILD == "clang++-8" || $CXX_FOR_BUILD == "clang++" || $CXX_FOR_BUILD == "clang") ]]; then
      wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add - && sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main' && sudo apt-get -y update && sudo apt-get install -y ${env_cmake_c_compiler} libc++-dev;
    fi;

script:
  - mkdir build
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      export CMAKE_MAJOR_VERSION=3.17;
      export CMAKE_MINOR_VERSION=2;
      wget -q https://cmake.org/files/v${CMAKE_MAJOR_VERSION}/cmake-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}-Linux-x86_64.sh && mkdir /opt/cmake && sh ./cmake-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}-Linux-x86_64.sh --prefix=/opt/cmake --skip-license && sudo ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake && rm ./cmake-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}-Linux-x86_64.sh && export PATH=/usr/local/bin:$PATH;
    fi;
  - if [[ $TRAVIS_OS_NAME == "windows" ]]; then
      choco upgrade cmake -y --version=3.17.2;
      choco install glfw3 -y --version=3.0.4.2;
      choco uninstall -y python2;
      choco install -y python3;
    fi;
  - cd build
# These are the same, except we explicitly locate the python executable on windows.
  - if [[ $TRAVIS_OS_NAME == "windows" ]]; then
      cmake -DCMAKE_CXX_COMPILER=${env_cmake_cxx_compiler} -DCMAKE_C_COMPILER=${env_cmake_c_compiler} -DCMAKE_BUILD_TYPE=${BUILD} -DENGINE_ENABLE_AUDIO=${enable_audio} -DENGINE_ENABLE_VR=${enable_vr} -DENGINE_ENABLE_TEXT=${enable_text} -DENGINE_ENABLE_ANIMATION=${enable_animation} -DENGINE_ENABLE_JSON=${enable_json} -DENGINE_MIN_GAME_OBJECT=${enable_min_game_object} -DENGINE_ENABLE_MULTITHREADED=${enable_multithreaded} -DENGINE_DEBUG=${enable_debug} -DENGINE_DEBUG_VR=${enable_debug_vr} -DENGINE_EXTRA_COMPILER_CHECKS=ON -DENGINE_WERROR=ON -DPYTHON_EXECUBABLE=C:/Python38/python.exe ..;
    else
      cmake -DCMAKE_CXX_COMPILER=${env_cmake_cxx_compiler} -DCMAKE_C_COMPILER=${env_cmake_c_compiler} -DCMAKE_BUILD_TYPE=${BUILD} -DENGINE_ENABLE_AUDIO=${enable_audio} -DENGINE_ENABLE_VR=${enable_vr} -DENGINE_ENABLE_TEXT=${enable_text} -DENGINE_ENABLE_ANIMATION=${enable_animation} -DENGINE_ENABLE_JSON=${enable_json} -DENGINE_MIN_GAME_OBJECT=${enable_min_game_object} -DENGINE_ENABLE_MULTITHREADED=${enable_multithreaded} -DENGINE_DEBUG=${enable_debug} -DENGINE_DEBUG_VR=${enable_debug_vr} -DENGINE_EXTRA_COMPILER_CHECKS=ON -DENGINE_WERROR=ON ..;
    fi;
  - cmake --build . -j 4
 #- ctest .
